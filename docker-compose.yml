version: '3.8'

services:
  mysql:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: my_database
      MYSQL_USER: user
      MYSQL_PASSWORD: user_password
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - my_network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5
  rest-server:
    build:
      context: .
      dockerfile: ./build/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - DATABASE_HOST=mysql
      - DATABASE_PORT=3306
      - DATABASE_USERNAME=user
      - DATABASE_PASSWORD=user_password
      - DATABASE_NAME=my_database
      - ES_HOST=elasticsearch
      - ES_PORT=9200
    command: rest-server -env /api/env.example
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - my_network
  elasticsearch:
    image: elasticsearch:7.17.9
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
    healthcheck:
      test: [ "CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1" ]
      interval: 20s
      timeout: 1s
      retries: 5
    networks:
      - my_network

volumes:
  db_data:

networks:
  my_network:
    driver: bridge